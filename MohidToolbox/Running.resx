<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="MyCancelButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAQCSURBVFhH7ZdfSFVZGMWPf0isNMvCtEgsR8OMUKOioCCVyegfFPOQMGFEM8REoRWlUEzBxEzQ
        Q0VPRi9FDzEPQdAwFUQPw9BD2DBTMViT3muXypmikhHBvn7rXEvlnnM8x177YHH33Xut9X1n73323ddx
        Pof/DGQwdBb8DuaOY6KkkVYe8ooUabDbKxzHdgLaXWBeBAdxu75DOz+pbwfyDB2nKN9ugL9AU7Qi3OR7
        0FC1/QKKk/pTYbMfL3Scd1eVfNMm61i61O7Q/ippEgdlAUYai++A+xBIK48rtGfiydjxsYo4nA/xZwT3
        GxosfuyYxY4etT8wukXf+uAi3OSNcO4CaaSVh7wu0zctWcRhvyJ25kC4qOSrVlmsrW0Yra32Z02N/crY
        Wu8i3OSapd+AuDE0Iz3keYEx5YDL1hoduXz99zSEB6q8udliLS2jQd/9qip3Tb8cLqIcHfvMiW+k77aK
        h+Onl7dyKBdQzo8xjS3axwJZ5+rVFtu1yxcPFy2ya8NFJHBIaFZuat0ZC9LKWzmUCx0rMjpq0x3nzfcQ
        Hi1fbvHt233x94IF7nKsAQ3gOlBfkEae8lYO0tb67YMVVPeyDeLj6mqLb91q8cbGVNDfWVHhvqaC2kFc
        eclT3iReMdabsBjCi30I/uGperZs8cbmzfa4vNxFD20/njzkJU8g71CxUGu7G+GT0lJ7um7duCCtPOQF
        5BkptMO7dRR3zZljibo6S9TXhwNcaYaO8W585DWuKEH1aBtFxAoL7dnKlfaM9zkQcMSVRlogj08KDkDH
        ToDE9On2fNmyQIgjrjRA2k+KatS9X2Om4/U5T9bLjg6COOIOzUAvenmMK2qU/BudbqC3oMD+q6wMBXGl
        +TY5CypCXpFiid7ZvTqUwEum9VVZWSRII608ht7/JWErcJMfRNgDXk+dam9KSjzxurjYBN9xtPI4FKEI
        N/kPCDg17O2UKdY3e7Y3ioqsZ8IEF320/XjyYA1MnmPNRBZT9OKknhr8n5Nj/aylJ2bMsHhmplXBY4e5
        7X76/Pjykqe8lQMoV0o0cJeyfjAwaZIN5Od7g2ntzsiwyqTZJUFt9Q0w5qvDU97KgYbfsNRo+kLrnpZm
        g7m5NpiXlwr6n6SnG7cPXSp00dRtVzinPo0FaeWtHPC5ZqZGJl3nS7XzIdrEiWaTJw+D7530c6zJ4Azg
        l/VjqH1GY+J4aeUpb+UAyuUZujqfKOJp7kG2rCyz7Gz38wHfZyWf/Ec/scbEEXekVl7ylDcIdT0/kOc4
        g7piGWvbwWdB0uBIQPIPQ0fElUZaeciLwQMhtKMoTdmOM/ATBkO32f0RDPZLI6080HmueRi/DZD4b+Jw
        IkcOaaSVx+fwnYH3QazXWWVz4KIAAAAASUVORK5CYII=
</value>
  </data>
</root>